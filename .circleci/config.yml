defaults: &defaults
  working_directory: /webrtc-streamer
  docker:
    - image: heroku/heroku:18
    
version: 2
jobs:
  # -------------------------------------
  # dowload common tools 
  # -------------------------------------
  setup:
    <<: *defaults
    
    environment:
      WEBRTCROOT: /webrtc 

    steps:     
      - run: apt-get update; apt-get install -y --no-install-recommends autoconf automake libtool git make g++ xz-utils
      - run: git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git /depot_tools
      - run: echo 'export PATH=/depot_tools:$PATH' >> $BASH_ENV
      - run: mkdir ${WEBRTCROOT} && cd ${WEBRTCROOT} && fetch --no-history --nohooks webrtc 
      - run: cd ${WEBRTCROOT} && sed -i -e "s|'src/resources'],|'src/resources'],'condition':'rtc_include_tests==true',|" src/DEPS 

      - persist_to_workspace:
          root: /
          paths:
            - depot_tools 
            - webrtc
            

  # -------------------------------------
  # build for RPI1/B
  # -------------------------------------
  build_rpi_armv6:
    <<: *defaults

    environment:
      GNARGSCOMMON: 'rtc_include_tests=false rtc_enable_protobuf=false use_custom_libcxx=false rtc_include_pulse_audio=false rtc_build_examples=false is_clang=false treat_warnings_as_errors=false' 
      TAR_OPTIONS: --no-same-owner
      WEBRTCROOT: /webrtc 
      GYP_GENERATOR_OUTPUT: "rpi-armv6"  
      GNARGS: 'is_debug=false use_ozone=true target_cpu="arm" arm_version=6 arm_float_abi="hard" rtc_include_opus=false use_sysroot=false' 
      CROSS: arm-linux-gnueabihf- 
      CFLAGS_EXTRA: "-marm -march=armv6 -mfpu=vfp -mfloat-abi=hard"

    steps:
      - attach_workspace:
          at: /
      - checkout
      - run: apt-get update; apt-get install -y --no-install-recommends autoconf automake libtool git make g++ xz-utils          
      - run: wget -qO- https://releases.linaro.org/components/toolchain/binaries/6.4-2018.05/arm-linux-gnueabihf/gcc-linaro-6.4.1-2018.05-x86_64_arm-linux-gnueabihf.tar.xz  | tar xJ -C /opt 
      - run: echo 'export PATH=/opt/gcc-linaro-6.4.1-2018.05-x86_64_arm-linux-gnueabihf/bin:$PATH' >> $BASH_ENV
      - run: echo 'export PATH=/depot_tools:$PATH' >> $BASH_ENV
      - run: cd ${WEBRTCROOT} && gclient sync 
      - run: sed -e 's|"-mfpu=$arm_fpu"|"-mfpu=$arm_fpu","-marm"|' -i ${WEBRTCROOT}/src/build/config/compiler/BUILD.gn
      - run: cd ${WEBRTCROOT}/src && gn gen ${GYP_GENERATOR_OUTPUT}/out/Release --args="${GNARGSCOMMON} ${GNARGS}"
      - run: make live555 alsa-lib
      - run: cd ${WEBRTCROOT}/src && ( ninja -C ${GYP_GENERATOR_OUTPUT}/out/Release jsoncpp rtc_json webrtc builtin_audio_decoder_factory || ninja -C ${GYP_GENERATOR_OUTPUT}/out/Release jsoncpp rtc_json webrtc builtin_audio_decoder_factory || ninja -C ${GYP_GENERATOR_OUTPUT}/out/Release jsoncpp rtc_json webrtc builtin_audio_decoder_factory)
      - run: make all tgz 

      - run: mkdir /distrib && cp *.tgz /distrib
      - persist_to_workspace:
          root: /
          paths:
            - distrib 


  # -------------------------------------
  # store artifact in circleci
  # -------------------------------------
  store_artifact:
    <<: *defaults
    
    steps:
      - attach_workspace:
          at: /
      - store_artifacts:
          path: /distrib
          
  
workflows:
  version: 2
  build:
    jobs:
      - setup:
          filters:
            branches:
              only: v12       
      - build_rpi_armv6:
          requires:
            - setup
          filters:
            branches:
              only: v12         
      - store_artifact:
          requires:
            - build_rpi_armv6
          filters:
            branches:
              only: v12       
